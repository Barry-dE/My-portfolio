---
import ProjectLink from "./ProjectLink.astro";

const { project } = Astro.props;
enum ProjectStatus {
  ACTIVE = "active",
  DISCONTINUED = "discontinued",
  ARCHIVED = "archived",
  DEVELOPMENT = "development",
}
interface ProjectData {
  name: string;
  description: string;
  url: string;
  github_url: string;
  in_progress: boolean;
  status: ProjectStatus;
}

const { name, description, status, in_progress, url, github_url } = project as ProjectData;

const statusText = {
  [ProjectStatus.ACTIVE]: "Active",
  [ProjectStatus.DISCONTINUED]: "Discontinued",
  [ProjectStatus.ARCHIVED]: "Archived",
  [ProjectStatus.DEVELOPMENT]: "In Development",
};
const statusClass = "status-" + Object(ProjectStatus)[status];
---

<div class="w-full flex flex-col bg-neutral-900 bg-opacity-30 p-6 aspect-square transition-all rounded">
  <h2 class="text-3xl font-semibold">{name}</h2>
  <p class="text-sm leading-relaxed opacity-50 mt-2">
    {description}
  </p>
  <div class="mt-auto">
    {(<div class={"status " + statusClass}>{status?.toUpperCase()}</div>)}

    {
      !in_progress && (
        <div class="flex flex-row w-full items-center justify-center gap-3 mt-4">
          {url && <ProjectLink url={url}>Website</ProjectLink>}
          {github_url && <ProjectLink url={github_url}>GitHub</ProjectLink>}
        </div>
      )
    }
  </div>
</div>

<style>
  .status {
    width: max-content;
    font-size: 11px;
    font-family: "Space Grotesk", monospace;
    font-weight: 600;
    border-radius: 4px;
    padding-inline: 10px;
    padding-block: 2px;
  }
  .status-active {
    color: #22c55e;
    background-color: #22c55e2a;
  }
  .status-discontinued {
    color: #f43f5e;
    background-color: #f43f5e2a;
  }
  .status-archived {
    color: #737373;
    background-color: #7373732a;
  }
  .status-development {
    color: #f59e0b;
    background-color: #f59e0b2a;
  }
</style>
